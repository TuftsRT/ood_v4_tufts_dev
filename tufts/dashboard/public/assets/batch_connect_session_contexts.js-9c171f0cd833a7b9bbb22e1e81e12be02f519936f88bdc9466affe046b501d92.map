{
  "version": 3,
  "sources": ["../../javascript/alert.js", "../../javascript/config.js", "../../javascript/utils.js", "../../javascript/path_selector/path_selector_data_table.js", "../../javascript/path_selector/path_selector.js", "../../javascript/prefill_templates/prefill_templates.js", "../../javascript/prefill_templates/prefill_submit.js", "../../javascript/dynamic_forms.js", "../../javascript/batch_connect_session_contexts.js"],
  "sourcesContent": ["\nexport function alert(message) {\n  const div = alertDiv(message);\n  const main = document.getElementById('main_container');\n  main.prepend(div);\n  div.scrollIntoView({ behavior: 'smooth' });\n}\n\nfunction alertDiv(message) {\n  const span = document.createElement('span');\n  span.innerText = message;\n\n  const div = document.createElement('div');\n  div.classList.add('alert', 'alert-danger', 'alert-dismissible');\n  div.setAttribute('role', 'alert');\n  div.appendChild(span);\n  div.appendChild(closeButton());\n\n  return div;\n}\n\nfunction closeButton() {\n  const button = document.createElement('button');\n  button.classList.add('btn-close');\n  button.dataset.bsDismiss = 'alert';\n\n  const span = document.createElement('span');\n  span.classList.add('sr-only');\n  span.innerText = 'Close';\n\n  button.appendChild(span);\n\n  return button;\n}", "'use strict;'\n\nconst CONFIG_ID = 'ood_config'\n\nexport function configData() {\n  return document.getElementById(CONFIG_ID).dataset;\n}\n\nexport function maxFileSize () {\n  const cfgData = configData();\n\n  // Check if cfgData['maxFileSize'] is just empty string, \n  // if so set default of maxFileUpload=10737420000 bytes.\n  if (cfgData['maxFileSize'].length == 0) {\n    return parseInt(10737420000, 10);\n  }\n  else {\n    const maxFileSize = cfgData['maxFileSize'];\n    return parseInt(maxFileSize, 10);\n  }\n}\n\nexport function transfersPath() {\n  const cfgData = configData();\n  const transfersPath = cfgData['transfersPath'];\n\n  return transfersPath;\n}\n\nexport function rootPath(){\n  const cfgData = configData();\n  const rootPath = cfgData['rootPath'];\n  if(rootPath == '/') {\n    return rootPath;\n  } else {\n    // remove the trailing / from /pun/sys/dashboard/\n    return rootPath.substring(0, rootPath.length-1)\n  }\n}\n\nexport function csrfToken() {\n  const csrf_token = document.querySelector('meta[name=\"csrf-token\"]').content;\n\n  return csrf_token;\n}\n\nexport function uppyLocale() {\n  const cfgData = configData();\n  return JSON.parse(cfgData['uppyLocale']);\n}\n\nexport function isBCDynamicJSEnabled() {\n  const cfgData = configData();\n  return cfgData['bcDynamicJs'] == 'true'\n}\n\n/*\n  Will return null if xdmod integration is not enabled.\n*/\nexport function xdmodUrl(){\n  const cfgData = configData();\n  const url = cfgData['xdmodUrl'];\n  return url == \"\" ? null : url;\n}\n\nexport function analyticsPath(type){\n  const cfgData = configData();\n  const basePath = cfgData['baseAnalyticsPath']\n  return `${basePath}/${type}`;\n}\n\nexport function bcPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['bcPollDelay']);\n}\n\nexport function bcIndexUrl() {\n  const cfgData = configData();\n  return cfgData['bcIndexUrl'];\n}\n\nexport function statusPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['statusPollDelay']);\n}\n\nexport function statusIndexUrl() {\n  const cfgData = configData();\n  return cfgData['statusIndexUrl'];\n}\n\nexport function appsDatatablePageLength() {\n  const cfgData = configData();\n  return parseInt(cfgData['appsDatatablePageLength']);\n}", "import {analyticsPath} from \"./config\";\n\nexport function cssBadgeForState(state){\n  switch (state) {\n    case 'completed':\n      return 'bg-success';\n    case 'running':\n      return 'bg-primary'\n    case 'queued':\n      return 'bg-info';\n    case 'queued_held':\n      return 'bg-warning';\n    case 'suspended':\n      return 'bg-warning';\n    default:\n      return 'bg-warning';\n  }\n}\n\nexport function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function startOfYear() {\n  const now = new Date();\n  const past = new Date();\n  past.setDate(1);\n  past.setMonth(0);\n  past.setFullYear(now.getFullYear());\n  return `${past.getFullYear()}-${past.getMonth()+1}-${past.getDate()}`;\n}\n\nexport function thirtyDaysAgo() {\n  const now = new Date();\n  const past = new Date();\n  past.setDate(now.getDate() - 30);\n  return `${past.getFullYear()}-${past.getMonth()+1}-${past.getDate()}`;\n}\n\nexport function today() {\n  const now = new Date();\n  return `${now.getFullYear()}-${now.getMonth()+1}-${now.getDate()}`;\n}\n\nfunction showSpinner() {\n  $('body').addClass('modal-open');\n  $('#full-page-spinner').removeClass('d-none');\n}\n\nexport function bindFullPageSpinnerEvent() {\n  $('.full-page-spinner').each((index, element) => {\n    const $element = $(element);\n    if($element.is('a')) {\n      $element.on('click', showSpinner);\n    } else {\n      $element.closest('form').on('submit', showSpinner);\n    }\n  });\n}\n\n// open links in javascript and display an alert\nexport function openLinkInJs(event) {\n  event.preventDefault();\n  let href = event.target.href;\n\n  // event.target could be a child of the anchor, so try that.\n  if(href == null) {\n    const closestAnchor = event.target.closest('a');\n    if(closestAnchor.hasChildNodes(event.target)) {\n      href = closestAnchor.href;\n    } else {\n      // event.target is not a child of an anhcor, so there's nothing to do.\n      return;\n    }\n  }\n\n  if(window.open(href) == null) {\n    // link was not opened in new window, so display error msg to user\n    const html = document.getElementById('js-alert-danger-template').innerHTML;\n    const msg = \"This link is configured to open in a new window, but it doesn't seem to have opened. \" +\n          \"Please disable your popup blocker for this page and try again.\";\n\n    // replace message in alert and add to main div of layout\n    const mainDiv = document.querySelectorAll('div[role=\"main\"]')[0];\n    const alertDiv = document.createElement('div');\n    alertDiv.innerHTML = html.split(\"ALERT_MSG\").join(msg);\n    mainDiv.prepend(alertDiv);\n  }\n}\n\n// Helper method to set an element's innerHTML property\n// and evaluate any <script> tags that may exist within it.\n// Just setting innerHTML of an html element does not re-evaluate\n// the <script> tags that it may hold.\nexport function setInnerHTML(element, html) {\n  element.innerHTML = html;\n  const scripts = Array.from(element.querySelectorAll(\"script\"));\n\n  scripts.forEach(currentElement => {\n    const newElement = document.createElement(\"script\");\n\n    Array.from(currentElement.attributes).forEach( attr => {\n      newElement.setAttribute(attr.name, attr.value);\n    });\n\n    const scriptText = document.createTextNode(currentElement.innerHTML);\n    newElement.appendChild(scriptText);\n\n    currentElement.parentNode.replaceChild(newElement, currentElement);\n  });\n}\n\n// Helper method to report errors from the front end via AJAX\nexport function reportErrorForAnalytics(path, error) {\n  // error - report back for analytics purposes\n  const analyticsUrl = new URL(analyticsPath(path), document.location);\n  analyticsUrl.searchParams.append('error', error);\n  // Fire and Forget\n  fetch(analyticsUrl);\n}\n\n// helper method to hide an element. Note that jQuery's hide()\n// changes the inline style which may not do anything if the element\n// already has a bootstrap display class like d-flex.\nexport function hide(id) {\n  const ele = document.getElementById(id);\n  if(ele !== null) {\n    ele.classList.add('d-none');\n  }\n}\n\n// helper method to show an element. Note that jQuery's show()\n// changes the inline style which may not do anything if the element\n// already has a bootstrap display class like d-flex.\nexport function show(id) {\n  const ele = document.getElementById(id);\n  if(ele !== null) {\n    ele.classList.remove('d-none');\n  }\n}\n", "import { alert } from '../alert';\nimport { hide, show } from \"../utils\";\n\nexport class PathSelectorTable {\n  _table = null;\n\n  // input data that should be passed into the constructor\n  tableId             = undefined;\n  filesPath           = undefined;\n  breadcrumbId        = undefined;\n  initialDirectory    = undefined;\n  selectButtonId      = undefined;\n  inputFieldId        = undefined;\n  modalId             = undefined;\n  showHidden          = undefined;\n  showFiles           = undefined;\n  filePattern         = undefined;\n\n  constructor(options) {\n      this.tableId             = options.tableId;\n      this.filesPath           = options.filesPath;\n      this.breadcrumbId        = options.breadcrumbId;\n      this.initialDirectory    = options.initialDirectory;\n      this.selectButtonId      = options.selectButtonId;\n      this.inputFieldId        = options.inputFieldId;\n      this.modalId             = options.modalId;\n      this.showHidden          = options.showHidden === 'true';\n      this.showFiles           = options.showFiles === 'true';\n      this.filePattern         = options.filePattern;\n\n      this.initDataTable();\n      this.reloadTable(this.initialUrl());\n\n      $(`#${this.tableId} tbody`).on('click', 'tr', (event) => { this.clickRow(event) });\n      $('#favorites').on('click', 'li', (event) => { this.clickRow(event) });\n      $(`#${this.breadcrumbId}`).on('click', 'li', (event) => { this.clickBreadcrumb(event) });\n      $(`#${this.selectButtonId}`).on('click', (event) => { this.selectPath(event) });\n  }\n\n  initDataTable() {\n    this._table = $(`#${this.tableId}`).DataTable({\n      autoWidth: false,\n      language: {\n        search: 'Filter:',\n      },\n      order: [[0, \"asc\"], [1, \"asc\"]],\n      rowId: 'id',\n      paging: false,\n      scrollCollapse: true,\n      select: {\n          style: 'os',\n          className: 'selected',\n          toggleable: true,\n          // don't trigger select checkbox column as select\n          // if you need to omit more columns, use a \"selectable\" class on the columns you want to support selection\n          selector: 'td:not(:first-child)'\n      },\n      // https://datatables.net/reference/option/dom\n      // dom: '', dataTables_info nowrap\n      //\n      // put breadcrumbs below filter!!!\n      dom: \"<'row'<'col-sm-12'f>>\" + // normally <'row'<'col-sm-6'l><'col-sm-6'f>> but we disabled pagination so l is not needed (dropdown for selecting # rows)\n          \"<'row'<'col-sm-12'<'dt-status-bar'<'datatables-status float-end'><'transfers-status'>>>>\" +\n          \"<'row'<'col-sm-12'tr>>\", // normally this is <'row'<'col-sm-5'i><'col-sm-7'p>> but we disabled pagination so have info take whole row\n      columns: [\n        {\n          data: 'type',\n          render: (data, _type, _row, _meta) => data == 'd' ? '<span title=\"directory\" class=\"fa fa-folder gold\"><span class=\"sr-only\">directory</span></span>' : '<span title=\"file\" class=\"fa fa-file black\"><span class=\"sr-only\">file</span></span>'\n        },\n        {\n            name: 'name',\n            data: 'name',\n            className: 'text-break',\n            render: (data, _type, _row, _meta) => {\n                const ele = document.createElement('span');\n                ele.textContent = data;\n                return ele.outerHTML;\n            }\n\n        }\n      ],\n      createdRow: function (row, data, _dataIndex) {\n        row.classList.add('clickable');\n        row.dataset['apiUrl'] = data.url;\n        row.dataset['pathType'] = data.type;\n      },\n    });\n  }\n\n  async reloadTable(url) {\n    try {\n      $(this.tableWrapper()).hide();\n      show(`${this.tableId}_spinner`);\n      const response = await fetch(url, { headers: { 'Accept': 'application/json' }, cache: 'no-store' });\n      const data = await this.dataFromJsonResponse(response);\n      $(`#${this.breadcrumbId}`).html(data.path_selector_breadcrumbs_html);\n      this._table.clear();\n      this._table.rows.add(data.files);\n      this.setLastVisited(data.path);\n      this._table.draw();\n      this.resetTable();\n    } catch (err) {\n      this.resetTable();\n      if (err.message.match(\"Permission denied\")) {\n        $('#forbidden-warning').removeClass('d-none')\n        $('#forbidden-warning').trigger('focus');\n      }\n      console.log(err);\n    }\n  }\n\n  resetTable() {\n    hide(`${this.tableId}_spinner`);\n    $(this.tableWrapper()).show();\n    $('#forbidden-warning').addClass('d-none');\n  }\n\n  dataFromJsonResponse(response) {\n    return new Promise((resolve, reject) => {\n      Promise.resolve(response)\n        .then(response => response.ok ? Promise.resolve(response) : Promise.reject(new Error(response.statusText)))\n        .then(response => response.json())\n        .then(data => this.filterFileResponse(data))\n        .then(data => data.error_message ? Promise.reject(new Error(data.error_message)) : resolve(data))\n        .catch((e) => reject(e))\n    });\n  }\n\n  clickRow(event) {\n    const row = $(event.target).closest('tr').get(0) || event.target;\n    const url = row.dataset['apiUrl'];\n    const pathType = row.dataset['pathType'];\n    this.activateFavorite(row);\n\n    // only reload table for directories. and correct last visited\n    // if it's a file.\n    if(pathType == 'f') {\n      const path = url.replace(this.filesPath, '').replaceAll('//','/');\n      this.setLastVisited(path, pathType);\n    } else {\n      this.reloadTable(url);\n    }\n  }\n\n  activateFavorite(currentlyClicked) {\n    $('li.active').each((_idx, ele) => {\n      ele.classList.remove('active');\n    });\n\n    if(currentlyClicked.tagName == \"LI\") {\n      currentlyClicked.classList.add('active');\n    }\n  }\n\n  clickBreadcrumb(event) {\n    const path = event.target.id;\n    this.activateFavorite(event.target);\n    this.reloadTable(path);\n  }\n\n  selectPath(_event) {\n    const last = this.getLastVisited();\n    const inputField = document.getElementById(this.inputFieldId);\n    inputField.value = last.path;\n    $(`#${this.modalId}`).modal('hide');\n  }\n\n  storageKey() {\n    const underscore_path = window.location.pathname.replaceAll('/', '_');\n    return `${this.tableId}${underscore_path}_last_visited`;\n  }\n\n  tableWrapper() {\n    return `#${this.tableId}_wrapper`;\n  }\n\n  // note that this is storing the file system path, not the path of the URL \n  // i.e., '/home/annie' not '/pun/sys/dashboard/files/fs/home/annie'\n  getLastVisited() {\n    const lastVisited = localStorage.getItem(this.storageKey());\n    if(lastVisited === null) {\n      return { path: this.initialDirectory, type: 'd' };\n    } else {\n      return JSON.parse(lastVisited);\n    }\n  }\n\n  setLastVisited(path, pathType = 'd') {\n    const item = { path: decodeURI(path), type: pathType };\n    if(path) {\n      localStorage.setItem(this.storageKey(), JSON.stringify(item));\n    }\n  }\n\n  initialUrl() {\n    const last = this.getLastVisited();\n    let path = undefined;\n\n    // if the last visisted was a file, then set the initial\n    // url to the file's directory.\n    if(last.type == 'f') {\n      path = last.path.split('/').slice(0, -1).join('/');\n    } else {\n      path = last.path;\n    }\n\n    if(path.startsWith('/')) {\n      return `${this.filesPath}${path}`;\n    } else {\n      return `${this.filesPath}/${path}`;\n    }\n  }\n\n  // filter the response from the files API to remove things like hidden files/directories\n  filterFileResponse(data) {\n    let regex = undefined\n\n    try {\n      if (this.filePattern !== undefined) {\n        regex = RegExp(this.filePattern);\n      }\n    } catch {\n      alert(\"The regular expression provided for this path selector did not compile\");\n    }\n\n    const filteredFiles = data.files.filter((file) => {\n      const isHidden = file.name.startsWith('.');\n      const isFile = file.type == \"f\";\n\n      if(isHidden && isFile) {\n        return this.showHidden && this.showFiles;\n      } else if(isHidden) {\n        return this.showHidden;\n      } else if(isFile) {\n        return this.filteredByFilename(file, regex);\n      } else {\n        return true;\n      }\n    });\n\n    data.files = filteredFiles;\n    return data;\n  }\n\n  filteredByFilename(file, regex) {\n    if (regex !== undefined) {\n      if (file.name.match(regex)) {\n        return this.showFiles;\n      } else {\n        return false;\n      }\n    }\n    else {\n      return this.showFiles;\n    }\n  }\n}", "'use strict';\n\nimport { PathSelectorTable } from \"./path_selector_data_table\";\n\nexport function attachPathSelectors() {\n  $(\"[data-path-selector='true']\").each((_idx, element) => {\n    const query = `#${pathSelectorId(element.id)}`;\n    const modal = $(query).get(0);\n\n    makeTable(modal);\n  });  \n}\n\nfunction pathSelectorId(id) {\n  return `${id}_path_selector`;\n}\n\nfunction makeTable(element) {\n  const options = getPathSelectorOptions(element);\n  new PathSelectorTable(options);\n}\n\nfunction getPathSelectorOptions(element) {\n  const options = {};\n\n  options.filesPath           = element.dataset['filesPath'];\n  options.initialDirectory    = element.dataset['initialDirectory'];\n  options.tableId             = element.dataset['tableId'];\n  options.breadcrumbId        = element.dataset['breadcrumbId'];\n  options.selectButtonId      = element.dataset['selectButtonId'];\n  options.inputFieldId        = element.dataset['inputFieldId'];\n  options.showFiles           = element.dataset['showFiles'];\n  options.showHidden          = element.dataset['showHidden'];\n  options.filePattern         = element.dataset['filePattern']\n  options.modalId             = element.id;\n\n  return options;\n}\n", "'use strict';\n\nconst bcPrefix = 'batch_connect_session_context';\nconst templateSelectId = 'batch_connect_session_prefill_template';\n\nexport function prefillTemplatesHandler() {\n  const picker = $(`#${templateSelectId}`);\n  if (picker.length == 0) { return; }\n\n  picker.on('change', function () {\n    const templateOption = $(`#${templateSelectId} option:selected`);\n    if (!templateOption.val()) { return; }\n\n    let json;\n    try {\n      json = JSON.parse(templateOption.val());\n    } catch (error) {\n      $('#batch_connect_session_template_form_error_modal').text(error.message)\n      $('#batch_connect_session_template_form_error_modal_body').modal('show');\n      return;\n    }\n\n    let errorMsg = '';\n    for (const [key, value] of Object.entries(json)) {\n      let element = $(`#${bcPrefix}_${key}`);\n\n      if (element.length == 0) {\n        // For radio buttons\n        if (/^\\d+$/.test(value)) {\n          element = $(`#${bcPrefix}_${key}_${value}`);\n        } else {\n          continue;\n        }\n      }\n\n      if (element.is('select') && value !== '') {\n        // Ensure that the option exists\n        if (element.find(`option[value=\"${value}\"]`).length == 0) {\n          errorMsg += `Invalid value: \"${value}\" for the field \"${key}\".<br>`;\n          continue;\n        }\n      }\n\n      switch (element.attr('type')) {\n        case \"checkbox\":\n          value === \"1\" ? element.prop('checked', true) : element.prop('checked', false);\n          break;\n\n        case \"radio\":\n          element.filter(`[value=\"${value}\"]`).prop('checked', true);\n\n        default:\n          element.val(value);\n          break;\n      }\n      element.trigger('change');\n    }\n\n    if (errorMsg) {\n      $('#batch_connect_session_template_form_error_modal_body').html(errorMsg)\n      $('#batch_connect_session_template_form_error_modal').modal('show');\n    }\n  });\n}\n", "'use strict';\n\nconst selectorID = \"modal_input_template_name\";\nconst newNameID = \"modal_input_template_new_name\";\n\nexport function prefillSubmitHandler() {\n\n  const chooseTemplateName = $(\"#chooseTemplateName\");\n  if (chooseTemplateName.length === 0) {\n    return;\n  }\n\n  const chooseTemplateNameError = $(\"#batch_connect_session_template_name_error_modal\");\n  const templateName = $(\"#batch_connect_session_template_name\");\n  const saveTemplate = $(\"#batch_connect_session_save_template\");\n  const saveSubmit = $(\"#batch_connect_session_save_template_submit\");\n\n  $(`#${selectorID}`).on(\"change\", function () {\n    const newName = $(`#${newNameID}`);\n    if ($(this).val() === \"\") {\n      newName.show();\n    } else {\n      newName.hide();\n    }\n  });\n\n  $(\"#batch_connect_session_template_choose_name_button\").on(\"click\", function () {\n    const name = $(`#${selectorID}`).val() || $(`#${newNameID}`).val();\n    if (name === \"\") {\n      chooseTemplateNameError.modal('show');\n      return;\n    }\n\n    chooseTemplateNameError.modal('hide');\n    templateName.val(name);\n    chooseTemplateName.modal('hide');\n    saveSubmit.prop(\"disabled\", false);\n  });\n\n  saveTemplate.on('change', function () {\n    if ($(this).is(':checked')) {\n      chooseTemplateName.modal('show');\n    } else {\n      templateName.val(\"\");\n      $(`#${selectorID}`).val(\"\")\n      const newName = $(`#${newNameID}`);\n      newName.val(\"\");\n      newName.show();\n      saveSubmit.prop(\"disabled\", true);\n    }\n  });\n\n  chooseTemplateName.on('hidden.bs.modal', function () {\n    if (templateName.val() === \"\") {\n      saveTemplate.prop('checked', false);\n      saveTemplate.trigger('change');\n    }\n  });\n}\n", "'use strict';\n\n// these are initialized in makeChangeHandlers\nvar idPrefix = undefined;\nvar shortNameRex = undefined;\n\n// @example ['NodeType', 'Cluster']\nconst formTokens = [];\n\n// simple lookup table to indicate that the change handler is setup between two\n// elements. I.e., {'cluster': [ 'node_type' ] } means that changes to cluster\n// trigger changes to node_type\nconst optionForHandlerCache = {};\nconst exclusiveOptionForHandlerCache = {};\n\n\n// simples array of string ids for elements that have a handler\nconst minMaxHandlerCache = [];\nconst setHandlerCache = [];\n// hide handler cache is a map in the form '{ from: [hideThing1, hideThing2] }'\nconst hideHandlerCache = {};\nconst labelHandlerCache = {};\n\n// Lookup tables for setting min & max values\n// for different directives.\nconst minMaxLookup = {};\nconst setValueLookup = {};\nconst hideLookup = {};\nconst labelLookup = {};\n\n// the regular expression for mountain casing\nconst mcRex = /[-_]([a-z])|([_-][0-9])|([\\/])/g;\n\n// whether we're still initializing or not\nlet initializing = true;\n\nfunction idWithPrefix(name) {\n  return `${idPrefix}_${name.toLowerCase()}`;\n};\n\n// here the simple name for 'batch_connect_session_context_cluster'\n// is just 'cluster'.\nfunction shortId(elementId) {\n  const match = elementId.match(shortNameRex);\n\n  if (match.length >= 1) {\n    return match[1];\n  } else {\n    return '';\n  };\n};\n\n/**\n * Mountain case the words from a string, by tokenizing on [-_].  In the\n * simplest case it just capitalizes.\n *\n * There is a special case where seperators are followed numbers. In this case\n * The seperator is kept as a hyphen because that's how jQuery expects it.\n *\n * @param      {string}  str     The word string to mountain case\n *\n * @example  given 'foo' this returns 'Foo'\n * @example  given 'foo-bar' this returns 'FooBar'\n * @example  given 'physics_1234' this returns 'Physics-1234'\n */\n// Convert dashed to camelCase\nfunction mountainCaseWords(str) {\n  const lower = str.toLowerCase();\n  const first = lower.charAt(0).toUpperCase();\n  const rest = lower.slice(1).replace(mcRex, function(_all, letter, prefixedNumber, slash) {\n    if(letter){\n      return letter.toUpperCase();\n    }else if(prefixedNumber){\n      return prefixedNumber.replace('_','-');\n    }else if(slash){\n      return '_';\n    }\n  });\n\n  return  `${first}${rest}`;\n}\n\n/**\n * Format passed string to snake_case. All characters become lowercase. Existing\n * underscores are unchanged and dashes become underscores. Underscores are added \n * before locations where an uppercase character is followed by a lowercase character.\n *\n * @param      {string}  str     The word string to snake case\n *\n * @example  given 'MountainCase' this returns 'mountain_case'\n * @example  given 'camelCase' this returns 'camel_case'\n * @example  given 'OSC_JUPYTER' this returns 'osc_jupyter'\n */\nfunction snakeCaseWords(str) {\n  if(str === undefined) return undefined;\n\n  // find all the captial case words and if none are found, we'll just bascially\n  // return the same string.\n  const rex = /([A-Z]{1}[a-z]*[0-9]*)|([^-_]+)/g;\n  const words = str.match(rex);\n\n  // filter out emtpy matches to avoid having a _ at the end.\n  return words.filter(word => word != '').map(word => word.toLowerCase()).join('_');\n}\n\n/**\n *\n * @param {Array} elements\n */\nfunction memorizeElements(elements) {\n  elements.each((_i, ele) => {\n    formTokens.push(mountainCaseWords(shortId(ele['id'])));\n  });\n};\n\nfunction makeChangeHandlers(prefix){\n\n  // initialize some global variables.\n  idPrefix = prefix;\n  shortNameRex = new RegExp(`${idPrefix}_([\\\\w\\\\-]+)`);\n\n  const allElements = $(`[id^=${idPrefix}]`);\n  memorizeElements(allElements);\n\n  allElements.each((_i, element) => {\n    if (element['type'] == \"select-one\"){\n      let optionSearch = `#${element['id']} option`;\n      let options = $(optionSearch);\n      options.each((_i, opt) => {\n          // the variable 'opt' is just a data structure, not a jQuery result. \n          // it has no attr, data, show or hide methods so we have to query\n          // for it again\n          let data = $(`${optionSearch}[value='${opt.value}']`).data();\n          let keys = Object.keys(data);\n          if(keys.length !== 0) {\n            keys.forEach((key) => {\n              if(key.startsWith('optionFor')) {\n                let token = key.replace(/^optionFor/,'');\n                addOptionForHandler(idFromToken(token), element['id']);\n              } else if (key.startsWith('exclusiveOptionFor')) {\n                let token = key.replace(/^exclusiveOptionFor/, '');\n                addExclusiveOptionForHandler(idFromToken(token), element['id']);\n              } else if(key.startsWith('max') || key.startsWith('min')) {\n                addMinMaxForHandler(element['id'], opt.value, key, data[key]);\n              } else if(key.startsWith('set')) {\n                addSetHandler(element['id'], opt.value, key, data[key]);\n              } else if(key.startsWith('hide')) {\n                addHideHandler(element['id'], opt.value, key, data[key]);\n              } else if(key.startsWith('label')) {\n                addLabelHandler(element['id'], opt.value, key, data[key]);\n              }\n            });\n          }\n      });\n    } else if(element['type'] == \"checkbox\") {\n      let data = $(element).data();\n      let keys = Object.keys(data);\n      if(keys.length !== 0) {\n        keys.forEach((key) => {\n          if(key.startsWith('hide')) {\n            let tokens = parseCheckedWhen(key);\n            if(tokens !== undefined){\n              addHideHandler(element['id'], tokens['value'], tokens['key'], data[key]);\n            }\n          }\n        });\n      }\n    }\n  });\n\n  initializing = false;\n};\n\nfunction addHideHandler(optionId, option, key, configValue) {\n  const changeId = idFromToken(key.replace(/^hide/,''));\n\n  if(hideLookup[optionId] === undefined) hideLookup[optionId] = new Table(changeId, undefined);\n  const table = hideLookup[optionId];\n  table.put(changeId, option, configValue);\n\n  if(hideHandlerCache[optionId] === undefined) hideHandlerCache[optionId] = [];\n\n  if(!hideHandlerCache[optionId].includes(changeId)) {\n    const changeElement = $(`#${optionId}`);\n\n    changeElement.on('change', (event) => {\n      updateVisibility(event, changeId);\n    });\n\n    hideHandlerCache[optionId].push(changeId);\n  }\n\n  updateVisibility({ target: document.querySelector(`#${optionId}`) }, changeId);\n};\n\nfunction newLabel(changeElement, key) {\n  const selectedOptionLabelIndex = changeElement[0].selectedIndex;\n  const selectedOptionLabel = changeElement[0].options[selectedOptionLabelIndex];\n  return selectedOptionLabel.dataset[key];\n};\n\nfunction updateLabel(changeId, changeElement, key) {\n  $(`label[for=\"${changeId}\"]`)[0].innerHTML = newLabel(changeElement, key);\n}\n\nfunction addLabelHandler(optionId, option, key, configValue) {\n  const changeId = idFromToken(key.replace(/^label/, ''));\n  const changeElement = $(`#${optionId}`);\n\n  if(labelLookup[optionId] === undefined) labelLookup[optionId] = new Table(changeId, undefined);\n  const table = labelLookup[optionId];\n  table.put(changeId, option, configValue);\n\n  if(labelHandlerCache[optionId] === undefined) labelHandlerCache[optionId] = [];\n\n  if(!labelHandlerCache[optionId].includes(changeId)) {\n    changeElement.on('change', (event) => {\n      updateLabel(changeId, changeElement, key);\n    });\n  };\n\n  updateLabel(changeId, changeElement, key);\n};\n\n/**\n *\n * @param {*} subjectId batch_connect_session_context_node_type\n * @param {*} option gpu\n * @param {*} key maxNumCoresForClusterAnnieOakley\n * @param {*} configValue 42\n *\n * node_type:\n *   widget: select\n *   options:\n *    - [\n *        'gpu',\n *        data-max-num-cores-for-cluster-annie-oakley: 42\n *      ]\n */\nfunction addMinMaxForHandler(subjectId, option, key,  configValue) {\n  subjectId = String(subjectId || '');\n  configValue = parseInt(configValue);\n\n  const configObj = parseMinMaxFor(key);\n  const objectId = configObj['subjectId'];\n  // this is the id of the target object we're setting the min/max for.\n  // if it's undefined - there's nothing to do, it was likely configured wrong.\n  if(objectId === undefined) return;\n\n  const secondDimId = configObj['predicateId'];\n  const secondDimValue = configObj['predicateValue'];\n\n  // several subjects can try to change the object, so the table lookup key has to have both\n  const lookupKey = `${subjectId}_${objectId}`;\n  if(minMaxLookup[lookupKey] === undefined) minMaxLookup[lookupKey] = new Table(subjectId, secondDimId);\n  const table = minMaxLookup[lookupKey];\n  table.put(option, secondDimValue, {[minOrMax(key)] : configValue });\n\n  let cacheKey = `${objectId}_${subjectId}_${secondDimId}`;\n  if(!minMaxHandlerCache.includes(cacheKey)) {\n    const changeElement = $(`#${subjectId}`);\n\n    changeElement.on('change', (event) => {\n      toggleMinMax(event, objectId, secondDimId);\n    });\n\n    minMaxHandlerCache.push(cacheKey);\n  }\n\n  cacheKey = `${objectId}_${secondDimId}_${subjectId}`;\n  if(secondDimId !== undefined && !minMaxHandlerCache.includes(cacheKey)){\n    const secondEle = $(`#${secondDimId}`);\n\n    secondEle.on('change', (event) => {\n      toggleMinMax(event, objectId, subjectId);\n    });\n\n    minMaxHandlerCache.push(cacheKey);\n  }\n\n  toggleMinMax({ target: document.querySelector(`#${subjectId}`) }, objectId, secondDimId);\n}\n\n/**\n *\n * @param {*} optionId batch_connect_session_context_classroom\n * @param {*} option 'PHY_9000'\n * @param {*} key setAccount\n * @param {*} configValue 'phy3005'\n *\n * classroom:\n *   widget: select\n *   options:\n *    - [\n *        'Physics Maximum', 'PHY_9000',\n *        data-set-account: 'phy3005'\n *      ]\n */\nfunction addSetHandler(optionId, option, key, configValue) {\n  const k = key.replace(/^set/,'');\n  const id = String(idFromToken(k));\n  if(id === 'undefined') return;\n\n  // id is account. optionId is classroom\n  let cacheKey = `${id}_${optionId}`\n  if(setValueLookup[cacheKey] === undefined) setValueLookup[cacheKey] = new Table(optionId, undefined);\n  const table = setValueLookup[cacheKey];\n  table.put(option, undefined, configValue);\n\n  if(!setHandlerCache.includes(cacheKey)) {\n    const changeElement = $(`#${optionId}`);\n\n    changeElement.on('change', (event) => {\n      setValue(event, id);\n    });\n\n    setHandlerCache.push(cacheKey);\n  }\n\n  setValue({ target: document.querySelector(`#${optionId}`) }, id);\n}\n\nfunction setValue(event, changeId) {\n  const chosenVal = event.target.value;\n  const cacheKey = `${changeId}_${event.target['id']}`\n  const table = setValueLookup[cacheKey];\n  if (table === undefined) return;\n\n  const changeVal = table.get(chosenVal, undefined);\n\n  if(changeVal !== undefined) {\n    const element = document.getElementById(changeId);\n    if(element['type'] == 'checkbox') {\n      setCheckboxValue(element, changeVal);\n    } else {\n      element.value = changeVal;\n    }\n  }\n}\n\nfunction setCheckboxValue(checkbox, value) {\n  const positiveValue = checkbox.value;\n  if(value == positiveValue) {\n    checkbox.checked = true;\n  } else {\n    checkbox.checked = false;\n  }\n}\n\n/**\n *\n *  This is a simple table class to describe the relationship between\n *  two different element types as a table with named columns.\n *\n *  table.get('gpu','owens') would return the value shown.\n *\n *      'oakley'   |                    |                |\n *      'owens'    | { min: 3, max: 42} |                |\n *                 |  'gpu'             |   'hugemem'    |\n *\n * In the simple case, it's a 1d vector instead of a 2d matrix. This\n * allows for, say, gpu to have the same min & max across clusters.\n */\nclass Table {\n  constructor(x, y) {\n    // FIXME: probably need to make Vector class? Wouldn't want to add a flag to the constructor.\n    // we don't use x or y internally, though x is used externally.\n    this.x = x;\n    this.xIdxLookup = {};\n\n    this.y = y;\n    this.yIdxLookup = {};\n    this.table = y === undefined ? [] : [[]];\n  }\n\n  put(x, y, value) {\n    if(!x) return;\n    x = snakeCaseWords(x);\n    y = snakeCaseWords(y);\n\n    if(this.xIdxLookup[x] === undefined) this.xIdxLookup[x] = Object.keys(this.xIdxLookup).length;\n    if(y && this.yIdxLookup[y] === undefined) this.yIdxLookup[y] = Object.keys(this.yIdxLookup).length;\n\n    const xIdx = this.xIdxLookup[x];\n    const yIdx = this.yIdxLookup[y];\n\n    if(this.table[xIdx] === undefined ){\n      this.table[xIdx] = y === undefined ? undefined : [];\n    }\n\n    // if y's index is defined, then it's a 2d matrix. Otherwise a 1d vector.\n    if(yIdx === undefined) {\n      if(this.table[xIdx] === undefined){\n        this.table[xIdx] = value;\n      } else {\n        const prev = this.table[xIdx];\n        const newer = value;\n        if(typeof newer == 'string' && typeof prev == 'string'){\n          this.table[xIdx] = newer;\n        } else {\n          this.table[xIdx] = Object.assign(prev, newer);\n        }\n      }\n    } else {\n      if(this.table[xIdx][yIdx] === undefined){\n        this.table[xIdx][yIdx] = value;\n      } else {\n        const prev = this.table[xIdx][yIdx];\n        const newer = value;\n        if(typeof newer == 'string' && typeof prev == 'string'){\n          this.table[xIdx][yIdx] = newer;\n        } else {\n          this.table[xIdx][yIdx] = Object.assign(prev, newer);\n        }\n      }\n    }\n  }\n\n  get(x, y) {\n    const xIdx = this.xIdxLookup[snakeCaseWords(x)];\n    const yIdx = this.yIdxLookup[snakeCaseWords(y)];\n\n    if(this.table[xIdx] === undefined){\n      return undefined;\n    }else if(y === undefined){\n      return this.table[xIdx];\n    }else {\n      return this.table[xIdx][yIdx];\n    }\n  }\n}\n\n/**\n * Update the visibility of `changeId` based on the\n * event and what's in the hideLookup table.\n */\nfunction updateVisibility(event, changeId) {\n  const val = valueFromEvent(event);\n  const id = event.target['id'];\n  let changeElement = undefined;\n  \n  $(`#${changeId}`).parents().each(function(_i, parent) {\n    var classListValues = parent.classList.values();\n    for (const val of classListValues) {\n      // TODO: Using 'mb-3' here because 'form-group' was removed\n      // from Bootstrap 5 and replaced with 'mb-3' - however, this\n      // is a grid class which could (??) apply to parent elements\n      // in unpredictable parts of the chain - test for & resolve\n      if (val.match('mb-3')) {\n        changeElement = $(parent);\n      }\n    }\n  });\n\n  if (changeElement === undefined || changeElement.length <= 0) return;\n\n  // safe to access directly?\n  const hide = hideLookup[id].get(changeId, val);\n  if((hide === false) || (hide === undefined && !initializing)) {\n    changeElement.show();\n  }else if(hide === true) {\n    changeElement.hide();\n  }\n}\n\n// extract the value from the event. With checkbox being\n// handleded specially.\nfunction valueFromEvent(event) {\n  if(event.target['type'] == 'checkbox') {\n    return event.target.checked ? 'checked' : 'unchecked';\n  } else {\n    return event.target.value;\n  }\n}\n/**\n * Update the min & max values of `changeId` based on the\n * event, the `otherId` and the settings in minMaxLookup table.\n */\nfunction toggleMinMax(event, changeId, otherId) {\n  let x = undefined, y = undefined;\n\n  // many subjects can change the object, so we have to find the correct table\n  // in the form <subject>_<object>\n  let lookupKey = `${event.target['id']}_${changeId}`;\n  if(minMaxLookup[lookupKey] === undefined) {\n    lookupKey = `${otherId}_${changeId}`;\n  }\n\n  const table = minMaxLookup[lookupKey];\n\n  // in the example of cluster & node_type, either element can trigger a change\n  // so let's figure out the axis' based on the change element's id.\n  if(event.target['id'] == table.x) {\n    x = snakeCaseWords(event.target.value);\n    y = snakeCaseWords($(`#${otherId}`).val());\n  } else {\n    y = snakeCaseWords(event.target.value);\n    x = snakeCaseWords($(`#${otherId}`).val());\n  }\n\n  const changeElement = $(`#${changeId}`);\n  const mm = table.get(x, y);\n  const prev = {\n    min: parseInt(changeElement.attr('min')),\n    max: parseInt(changeElement.attr('max')),\n  };\n\n  [ 'max', 'min' ].forEach((dim) => {\n    if(mm && mm[dim] !== undefined) {\n      changeElement.attr(dim, mm[dim]);\n    }\n  });\n\n  const val = clamp(parseInt(changeElement.val()), prev, mm)\n  if (val !== undefined) {\n    changeElement.attr('value', val);\n    changeElement.val(val);\n  }\n}\n\nfunction clamp(currentValue, previous, next) {\n  if(next === undefined){\n    return undefined;\n\n  // you've set the boundary, so when you go to the next value - keep it at the next's boundary\n  } else if(currentValue === previous['min']) {\n    return next['min'];\n  } else if(currentValue === previous['max']) {\n    return next['max'];\n\n  // otherwise you could be up or down shifting to fit within the next's boundaries\n  } else if(currentValue <= next['min']) {\n    return next['min'];\n  } else if(currentValue >= next['max']) {\n    return next['max'];\n  } else {\n    return undefined;\n  }\n}\n\nfunction sharedOptionForHandler(causeId, targetId, optionForType) {\n  const changeId = String(causeId || '');\n  let handlerCache = null;\n\n  if (optionForType == 'optionFor') {\n    if (optionForHandlerCache[causeId] == undefined) optionForHandlerCache[causeId] = [];\n    handlerCache = optionForHandlerCache;\n  } else if (optionForType == 'exclusiveOptionFor') {\n    if (exclusiveOptionForHandlerCache[causeId] == undefined) exclusiveOptionForHandlerCache[causeId] = [];\n    handlerCache = exclusiveOptionForHandlerCache;\n  }\n  \n  if(changeId.length == 0 || handlerCache[causeId].includes(targetId)) {\n    // nothing to do. invalid causeId or we already have a handler between the 2\n    return;\n  }\n\n  let causeElement = $(`#${causeId}`);\n\n  if(targetId && causeElement) {\n    // cache the fact that there's a new handler here\n    handlerCache[causeId].push(targetId);\n\n    causeElement.on('change', (event) => {\n      if (optionForType == 'exclusiveOptionFor') {\n        toggleExclusiveOptionsFor(event, targetId);\n      } else if (optionForType == 'optionFor') {\n        toggleOptionsFor(event, targetId);\n      }\n    });\n\n    // fake an event to initialize\n    if (optionForType == 'exclusiveOptionFor') {\n      toggleExclusiveOptionsFor({ target: document.querySelector(`#${causeId}`) }, targetId);\n    } else if (optionForType == 'optionFor') {\n      toggleOptionsFor({ target: document.querySelector(`#${causeId}`) }, targetId);\n    }\n  }\n}\n\nfunction addOptionForHandler(causeId, targetId) {\n  sharedOptionForHandler(causeId, targetId, 'optionFor');\n};\n\nfunction addExclusiveOptionForHandler(causeId, targetId) {\n  sharedOptionForHandler(causeId, targetId, 'exclusiveOptionFor');\n};\n\nfunction parseCheckedWhen(key) {\n  const tokens = key.match(/^hide(\\w+)When(\\w+)$/);\n\n  if(tokens !== undefined && tokens.length && tokens.length == 3) {\n    return {\n      'key': tokens[1],\n      'value': tokens[2].toLowerCase() == 'checked' ? 'checked' : 'unchecked'\n    };\n  } else {\n    return undefined;\n  }\n}\n\n/**\n *\n * @param {*} key minNumCoresForClusterAnnieOakley\n * @returns\n *\n *  {\n *    'subjectId': 'batch_connect_session_context_num_cores',\n *    'predicateId': 'batch_connect_session_context_cluster',\n *    'predicateValue': 'annie_oakley'\n *  }\n */\nfunction parseMinMaxFor(key) {\n  let k = undefined;\n  let predicateId = undefined;\n  let predicateValue = undefined;\n  let subjectId = undefined;\n\n  if(key.startsWith('min')) {\n    k = key.replace(/^min/,'');\n  } else if(key.startsWith('max')) {\n    k = key.replace(/^max/, '')\n  }\n\n  //trying to parse maxNumCoresForClusterOwens\n  const tokens = k.match(/^(\\w+)For(\\w+)$/);\n\n  if(tokens == null) {\n    // the key is likely just maxNumCores with no For clause\n    subjectId = idFromToken(k);\n\n  } else if(tokens.length == 3) {\n    const subject = tokens[1];\n    const predicateFull = tokens[2];\n    subjectId = idFromToken(subject);\n\n    const predicateTokens = predicateFull.split(/(?=[A-Z])/);\n    if(predicateTokens && predicateTokens.length >= 2) {\n\n      // if there are only 2 tokens then it's like 'ClusterOwens' which is easy\n      if(predicateTokens.length == 2) {\n        predicateId = idFromToken(predicateTokens[0]);\n        predicateValue = predicateTokens[1];\n\n      // else it's like NodeTypeFooBar, so it's a little more difficult\n      } else {\n        let tokenString = '';\n        let done = false;\n        predicateTokens.forEach((pt, idx) => {\n          if(done) { return; }\n\n          tokenString = `${tokenString}${pt}`\n          let tokenId = idFromToken(tokenString);\n          if(tokenId !== undefined) {\n            done = true;\n            predicateId = tokenId;\n            predicateValue = predicateTokens.slice(idx+1).join('');\n          }\n        })\n      }\n    }\n  }\n\n  return {\n    'subjectId': subjectId,\n    'predicateId': predicateId,\n    'predicateValue': snakeCaseWords(predicateValue),\n  }\n}\n\nfunction minOrMax(key) {\n  if(key.startsWith('min')){\n    return 'min';\n  } else if(key.startsWith('max')){\n    return 'max';\n  } else {\n    return null;\n  }\n}\n\n/**\n * Turn a MountainCase token into a form element id\n *\n * @example\n *  NodeType -> batch_connect_session_context_node_type\n *\n * @param {*} str\n * @returns\n */\nfunction idFromToken(str) {\n  elements = formTokens.map((token) => {\n    let match = str.match(`^${token}{1}`);\n\n    if (match && match.length >= 1) {\n      let ele = snakeCaseWords(match[0]);\n      return idWithPrefix(ele);\n    }\n  }).filter((id) => {\n    return id !== undefined;\n  });\n\n  if(elements.length == 0) {\n    return undefined;\n  }else if(elements.length == 1) {\n    return elements[0];\n\n  // you matched multiple things. For example you're searching for\n  // ClusterFilesystem and matched against both 'Cluster' and 'ClusterFilesystem'.\n  // The correrct element id ends with cluster_filesystem.\n  } else if(elements.length > 1) {\n    const snake_case_str = snakeCaseWords(str);\n    return elements.filter((element) => {\n      return element.endsWith(snake_case_str);\n    })[0];\n  }\n}\n\n/**\n * Extract the option for out of an option for directive.\n *\n * @example\n *  optionForClusterOakley -> Cluster\n *  exclusiveOptionForClusterOakley -> Cluster\n *\n * @param {*} str\n * @returns - the option for string\n */\nfunction sharedOptionForFromToken(str, optionForType) {  \n  return formTokens.map((token) => {\n    let match = str.match(`^${optionForType}${token}`);\n\n    if (match && match.length >= 1) {\n      return token;\n    }\n  }).filter((id) => {\n    return id !== undefined;\n  })[0];\n}\n\nfunction optionForFromToken(str) {\n  return sharedOptionForFromToken(str, 'optionFor');\n}\n\nfunction exclusiveOptionForFromToken(str) {\n  return sharedOptionForFromToken(str, 'exclusiveOptionFor');\n}\n\nfunction sharedToggleOptionsFor(_event, elementId, contextStr) {\n  const options = [...document.querySelectorAll(`#${elementId} option`)];\n  let hideSelectedValue = undefined;\n\n  options.forEach(option => {\n    let hide = false;\n\n    // even though an event occured - an option may be hidden based on the value of\n    // something else entirely. We're going to hide this option if _any_ of the\n    // option-for- directives apply.\n    for (let key of Object.keys(option.dataset)) {\n      let optionFor = '';\n\n      if (contextStr == 'optionFor') {\n        optionFor = optionForFromToken(key);\n      } else if (contextStr == 'exclusiveOptionFor') {\n        optionFor = exclusiveOptionForFromToken(key);\n      }\n      let optionForId = idFromToken(key.replace(new RegExp(`^${contextStr}`),''));\n\n      // it's some other directive type, so just keep going and/or not real\n      if(!key.startsWith(contextStr) || optionForId === undefined) {\n        continue;\n      }\n\n      let optionForValue = mountainCaseWords(document.getElementById(optionForId).value);\n      // handle special case where the very first token here is a number.\n      // browsers expect a prefix of hyphens as if it's the next token.\n      if (optionForValue.match(/^\\d/)) {\n        optionForValue = `-${optionForValue}`;\n      }\n\n      if (contextStr == 'optionFor') {\n        hide = option.dataset[`optionFor${optionFor}${optionForValue}`] === 'false';\n      } else if (contextStr == 'exclusiveOptionFor') {\n        hide = !(option.dataset[`exclusiveOptionFor${optionFor}${optionForValue}`] === 'true')\n      }\n\n      if (hide) {\n        break;\n      }\n    };\n\n    if(hide) {\n      if(option.selected) {\n        option.selected = false;\n        hideSelectedValue = option.textContent;\n      }\n\n      option.style.display = 'none';\n      option.disabled = true;\n    } else {\n      option.style.display = '';\n      option.disabled = false;\n    }\n  });\n\n  // now that we've hidden/shown everything, let's choose what should now\n  // be the current selected value.\n  // if you've hidden what _was_ selected.\n  if(hideSelectedValue !== undefined) {\n    let others = [...document.querySelectorAll(`#${elementId} option[value='${hideSelectedValue}']`)];\n    let newSelectedOption = undefined;\n\n    // You have hidden what _was_ selected, so try to find a duplicate option that is visible\n    if(others.length > 1) {\n      others.forEach(ele => {\n        if(ele.style.display === '') {\n          newSelectedOption = ele;\n          return;\n        }\n      });\n    }\n\n    // no duplciates are visible, so just pick the first visible option\n    if (newSelectedOption === undefined) {\n      others = document.querySelectorAll(`#${elementId} option`);\n      others.forEach(ele => {\n        if(newSelectedOption === undefined && ele.style.display === '') {\n          newSelectedOption = ele;\n        }\n      });\n    }\n\n    if (newSelectedOption !== undefined) {\n      newSelectedOption.selected = true;\n    }\n  }\n\n  // now that we're done, propogate this change to data-set or data-hide handlers\n  document.getElementById(elementId).dispatchEvent((new Event('change', { bubbles: true })));\n}\n\nfunction toggleOptionsFor(_event, elementId) {\n  sharedToggleOptionsFor(_event, elementId, 'optionFor');\n}\n\nfunction toggleExclusiveOptionsFor(_event, elementId) {\n  sharedToggleOptionsFor(_event, elementId, 'exclusiveOptionFor');\n};\n\nexport {\n  makeChangeHandlers\n}\n", "'use strict';\n\nimport { attachPathSelectors } from './path_selector/path_selector';\nimport { prefillTemplatesHandler } from './prefill_templates/prefill_templates';\nimport { prefillSubmitHandler } from './prefill_templates/prefill_submit';\nimport { isBCDynamicJSEnabled } from './config';\nimport { makeChangeHandlers } from './dynamic_forms';\n\n\njQuery(function() {\n  if(isBCDynamicJSEnabled()){\n    makeChangeHandlers('batch_connect_session_context');\n  }\n\n  attachPathSelectors();\n  prefillTemplatesHandler();\n  prefillSubmitHandler();\n});"],
  "mappings": "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",
  "names": ["alert", "message", "div", "alertDiv", "span", "closeButton", "button", "CONFIG_ID", "configData", "isBCDynamicJSEnabled", "configData", "hide", "id", "ele", "show", "PathSelectorTable", "options", "event", "data", "_type", "_row", "_meta", "ele", "row", "_dataIndex", "url", "show", "response", "err", "hide", "resolve", "reject", "e", "pathType", "path", "currentlyClicked", "_idx", "_event", "last", "inputField", "underscore_path", "lastVisited", "item", "regex", "alert", "filteredFiles", "file", "isHidden", "isFile", "attachPathSelectors", "_idx", "element", "query", "pathSelectorId", "modal", "makeTable", "id", "options", "getPathSelectorOptions", "PathSelectorTable", "bcPrefix", "templateSelectId", "prefillTemplatesHandler", "picker", "templateOption", "json", "error", "errorMsg", "key", "value", "element", "selectorID", "newNameID", "prefillSubmitHandler", "chooseTemplateName", "chooseTemplateNameError", "templateName", "saveTemplate", "saveSubmit", "newName", "name", "idPrefix", "shortNameRex", "formTokens", "optionForHandlerCache", "exclusiveOptionForHandlerCache", "minMaxHandlerCache", "setHandlerCache", "hideHandlerCache", "labelHandlerCache", "minMaxLookup", "setValueLookup", "hideLookup", "labelLookup", "mcRex", "initializing", "idWithPrefix", "name", "shortId", "elementId", "match", "mountainCaseWords", "str", "lower", "first", "rest", "_all", "letter", "prefixedNumber", "slash", "snakeCaseWords", "rex", "word", "memorizeElements", "elements", "_i", "ele", "makeChangeHandlers", "prefix", "allElements", "element", "optionSearch", "opt", "data", "keys", "key", "token", "addOptionForHandler", "idFromToken", "addExclusiveOptionForHandler", "addMinMaxForHandler", "addSetHandler", "addHideHandler", "addLabelHandler", "tokens", "parseCheckedWhen", "optionId", "option", "configValue", "changeId", "Table", "event", "updateVisibility", "newLabel", "changeElement", "selectedOptionLabelIndex", "updateLabel", "subjectId", "configObj", "parseMinMaxFor", "objectId", "secondDimId", "secondDimValue", "lookupKey", "minOrMax", "cacheKey", "toggleMinMax", "k", "id", "setValue", "chosenVal", "table", "changeVal", "setCheckboxValue", "checkbox", "value", "positiveValue", "x", "y", "xIdx", "yIdx", "prev", "newer", "val", "valueFromEvent", "parent", "classListValues", "hide", "otherId", "mm", "dim", "clamp", "currentValue", "previous", "next", "sharedOptionForHandler", "causeId", "targetId", "optionForType", "handlerCache", "causeElement", "toggleExclusiveOptionsFor", "toggleOptionsFor", "predicateId", "predicateValue", "subject", "predicateFull", "predicateTokens", "tokenString", "done", "pt", "idx", "tokenId", "snake_case_str", "sharedOptionForFromToken", "optionForFromToken", "exclusiveOptionForFromToken", "sharedToggleOptionsFor", "_event", "contextStr", "options", "hideSelectedValue", "optionFor", "optionForId", "optionForValue", "others", "newSelectedOption", "isBCDynamicJSEnabled", "makeChangeHandlers", "attachPathSelectors", "prefillTemplatesHandler", "prefillSubmitHandler"]
}
