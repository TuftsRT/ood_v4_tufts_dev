{
  "version": 3,
  "sources": ["../../javascript/config.js", "../../javascript/utils.js", "../../javascript/turbo_shim.js", "../../javascript/projects.js"],
  "sourcesContent": ["'use strict;'\n\nconst CONFIG_ID = 'ood_config'\n\nexport function configData() {\n  return document.getElementById(CONFIG_ID).dataset;\n}\n\nexport function maxFileSize () {\n  const cfgData = configData();\n\n  // Check if cfgData['maxFileSize'] is just empty string, \n  // if so set default of maxFileUpload=10737420000 bytes.\n  if (cfgData['maxFileSize'].length == 0) {\n    return parseInt(10737420000, 10);\n  }\n  else {\n    const maxFileSize = cfgData['maxFileSize'];\n    return parseInt(maxFileSize, 10);\n  }\n}\n\nexport function transfersPath() {\n  const cfgData = configData();\n  const transfersPath = cfgData['transfersPath'];\n\n  return transfersPath;\n}\n\nexport function rootPath(){\n  const cfgData = configData();\n  const rootPath = cfgData['rootPath'];\n  if(rootPath == '/') {\n    return rootPath;\n  } else {\n    // remove the trailing / from /pun/sys/dashboard/\n    return rootPath.substring(0, rootPath.length-1)\n  }\n}\n\nexport function csrfToken() {\n  const csrf_token = document.querySelector('meta[name=\"csrf-token\"]').content;\n\n  return csrf_token;\n}\n\nexport function uppyLocale() {\n  const cfgData = configData();\n  return JSON.parse(cfgData['uppyLocale']);\n}\n\nexport function isBCDynamicJSEnabled() {\n  const cfgData = configData();\n  return cfgData['bcDynamicJs'] == 'true'\n}\n\n/*\n  Will return null if xdmod integration is not enabled.\n*/\nexport function xdmodUrl(){\n  const cfgData = configData();\n  const url = cfgData['xdmodUrl'];\n  return url == \"\" ? null : url;\n}\n\nexport function analyticsPath(type){\n  const cfgData = configData();\n  const basePath = cfgData['baseAnalyticsPath']\n  return `${basePath}/${type}`;\n}\n\nexport function bcPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['bcPollDelay']);\n}\n\nexport function bcIndexUrl() {\n  const cfgData = configData();\n  return cfgData['bcIndexUrl'];\n}\n\nexport function statusPollDelay() {\n  const cfgData = configData();\n  return Number(cfgData['statusPollDelay']);\n}\n\nexport function statusIndexUrl() {\n  const cfgData = configData();\n  return cfgData['statusIndexUrl'];\n}\n\nexport function appsDatatablePageLength() {\n  const cfgData = configData();\n  return parseInt(cfgData['appsDatatablePageLength']);\n}", "import {analyticsPath} from \"./config\";\n\nexport function cssBadgeForState(state){\n  switch (state) {\n    case 'completed':\n      return 'bg-success';\n    case 'running':\n      return 'bg-primary'\n    case 'queued':\n      return 'bg-info';\n    case 'queued_held':\n      return 'bg-warning';\n    case 'suspended':\n      return 'bg-warning';\n    default:\n      return 'bg-warning';\n  }\n}\n\nexport function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function startOfYear() {\n  const now = new Date();\n  const past = new Date();\n  past.setDate(1);\n  past.setMonth(0);\n  past.setFullYear(now.getFullYear());\n  return `${past.getFullYear()}-${past.getMonth()+1}-${past.getDate()}`;\n}\n\nexport function thirtyDaysAgo() {\n  const now = new Date();\n  const past = new Date();\n  past.setDate(now.getDate() - 30);\n  return `${past.getFullYear()}-${past.getMonth()+1}-${past.getDate()}`;\n}\n\nexport function today() {\n  const now = new Date();\n  return `${now.getFullYear()}-${now.getMonth()+1}-${now.getDate()}`;\n}\n\nfunction showSpinner() {\n  $('body').addClass('modal-open');\n  $('#full-page-spinner').removeClass('d-none');\n}\n\nexport function bindFullPageSpinnerEvent() {\n  $('.full-page-spinner').each((index, element) => {\n    const $element = $(element);\n    if($element.is('a')) {\n      $element.on('click', showSpinner);\n    } else {\n      $element.closest('form').on('submit', showSpinner);\n    }\n  });\n}\n\n// open links in javascript and display an alert\nexport function openLinkInJs(event) {\n  event.preventDefault();\n  let href = event.target.href;\n\n  // event.target could be a child of the anchor, so try that.\n  if(href == null) {\n    const closestAnchor = event.target.closest('a');\n    if(closestAnchor.hasChildNodes(event.target)) {\n      href = closestAnchor.href;\n    } else {\n      // event.target is not a child of an anhcor, so there's nothing to do.\n      return;\n    }\n  }\n\n  if(window.open(href) == null) {\n    // link was not opened in new window, so display error msg to user\n    const html = document.getElementById('js-alert-danger-template').innerHTML;\n    const msg = \"This link is configured to open in a new window, but it doesn't seem to have opened. \" +\n          \"Please disable your popup blocker for this page and try again.\";\n\n    // replace message in alert and add to main div of layout\n    const mainDiv = document.querySelectorAll('div[role=\"main\"]')[0];\n    const alertDiv = document.createElement('div');\n    alertDiv.innerHTML = html.split(\"ALERT_MSG\").join(msg);\n    mainDiv.prepend(alertDiv);\n  }\n}\n\n// Helper method to set an element's innerHTML property\n// and evaluate any <script> tags that may exist within it.\n// Just setting innerHTML of an html element does not re-evaluate\n// the <script> tags that it may hold.\nexport function setInnerHTML(element, html) {\n  element.innerHTML = html;\n  const scripts = Array.from(element.querySelectorAll(\"script\"));\n\n  scripts.forEach(currentElement => {\n    const newElement = document.createElement(\"script\");\n\n    Array.from(currentElement.attributes).forEach( attr => {\n      newElement.setAttribute(attr.name, attr.value);\n    });\n\n    const scriptText = document.createTextNode(currentElement.innerHTML);\n    newElement.appendChild(scriptText);\n\n    currentElement.parentNode.replaceChild(newElement, currentElement);\n  });\n}\n\n// Helper method to report errors from the front end via AJAX\nexport function reportErrorForAnalytics(path, error) {\n  // error - report back for analytics purposes\n  const analyticsUrl = new URL(analyticsPath(path), document.location);\n  analyticsUrl.searchParams.append('error', error);\n  // Fire and Forget\n  fetch(analyticsUrl);\n}\n\n// helper method to hide an element. Note that jQuery's hide()\n// changes the inline style which may not do anything if the element\n// already has a bootstrap display class like d-flex.\nexport function hide(id) {\n  const ele = document.getElementById(id);\n  if(ele !== null) {\n    ele.classList.add('d-none');\n  }\n}\n\n// helper method to show an element. Note that jQuery's show()\n// changes the inline style which may not do anything if the element\n// already has a bootstrap display class like d-flex.\nexport function show(id) {\n  const ele = document.getElementById(id);\n  if(ele !== null) {\n    ele.classList.remove('d-none');\n  }\n}\n", "\n/*\n  While we want Turbo enabled at some point,\n  it doesn't really work well yet. So, we'll provide\n  this shim until we enable it.\n*/\n\nimport { setInnerHTML } from './utils';\nimport { alert } from './alert';\n\nexport function replaceHTML(id, html) {\n  const ele = document.getElementById(id);\n\n  if(ele == null){\n    return;\n  } else {\n    var tmp = document.createElement('div');\n    tmp.innerHTML = html;\n    const newHTML = tmp.querySelector('template').innerHTML;\n    tmp.remove();\n\n    setInnerHTML(ele, newHTML);\n  }\n}\n\nexport function pollAndReplace(url, delay, id, callback) {\n  fetch(url, { headers: { Accept: \"text/vnd.turbo-stream.html\" } })\n    .then((response) => {\n      if(response.status == 200) {\n        return Promise.resolve(response);\n      } else if(response.status == 401) {\n        return Promise.reject(\"This page cannot update becase you are no longer authenticated. Please refresh the page to log back in.\")\n      } else {\n        return Promise.reject(response.text());\n      }\n    })\n    .then((r) => r.text())\n    .then((html) => replaceHTML(id, html))\n    .then(() => {\n      setTimeout(pollAndReplace, delay, url, delay, id, callback);\n      if (typeof callback == 'function') {\n        callback();\n      }\n    })\n    .catch((err) => {\n      if (typeof err == 'string') {\n        alert(err);\n      } else {\n        alert('This page has encountered an unexpected error. Please refresh the page.');\n      }\n      console.log(err);\n    });\n}\n", "import { rootPath } from './config.js';\nimport { replaceHTML } from './turbo_shim';\n\n\njQuery(function() {\n  $('[data-job-poller=\"true\"]').each((_index, ele) => {\n    pollForJobInfo(ele);\n  });\n\n  $(\"[data-bs-toggle='project']\").each((_index, ele) => {\n    updateProjectSize(ele);\n  });\n});\n\nfunction jobDetailsPath(cluster, jobId) {\n  const baseUrl = rootPath();\n  const config = document.getElementById('project_config');\n  const projectId = config.dataset['projectId'];\n\n  return `${baseUrl}/projects/${projectId}/jobs/${cluster}/${jobId}`;\n}\n\nfunction pollForJobInfo(element) {\n  const cluster = element.dataset['jobCluster'];\n  const jobId = element.dataset['jobId'];\n\n  if(cluster === undefined || jobId === undefined){ return; }\n\n  const url = jobDetailsPath(cluster, jobId);\n\n  fetch(url, { headers: { Accept: \"text/vnd.turbo-stream.html\" } })\n    .then(response => response.ok ? Promise.resolve(response) : Promise.reject(response.text()))\n    .then((r) => r.text())\n    .then((html) => {\n      // if the job panel is currently open by the user, make the new\n      // html open as well.\n      const currentData = element.querySelector(`#${element.id}_data`);\n      let currentlyOpen = false;\n      const responseElement = stringToHtml(html);\n\n      if(currentData != null) {\n        currentlyOpen = currentData.classList.contains('show');\n      }\n\n      // if it's currently open keep it open.\n      if(currentlyOpen) {\n        const dataDiv = responseElement.querySelector(`#${element.id}_data`);\n        dataDiv.classList.add('show');\n      }\n\n      const jobStatus = responseElement.dataset['jobStatus'];\n      if(jobStatus === 'completed') {\n        moveCompletedPanel(element.id, responseElement.outerHTML);\n      } else {\n        replaceHTML(element.id, responseElement.outerHTML);\n      }\n\n      return jobStatus;\n    })\n    .then((status) => {\n      if(status != 'completed') {\n        setTimeout(pollForJobInfo, 30000, element);\n      }\n    })\n    .catch((err) => {\n      console.log('Cannot not retrive job details due to error:');\n      console.log(err);\n    });\n}\n\nfunction stringToHtml(html) {\n  const template = document.createElement('template');\n  template.innerHTML = html.trim();\n  return template.content.firstChild;\n}\n\nfunction moveCompletedPanel(id, newHTML) {\n  const oldElement = document.getElementById(id);\n  if(oldElement !== null) {\n    oldElement.remove();\n  }\n\n  const div = document.createElement('div');\n  div.id = id;\n  div.classList.add('col-md-4');\n\n  const row = document.getElementById('completed_jobs');\n  row.appendChild(div);\n\n  replaceHTML(id, newHTML);\n}\n\nfunction updateProjectSize(element) {\n  const UNDETERMINED = 'Undetermined Size';\n  const $container = $(element);\n\n  const projectPath = $container.data('url');\n  $.ajax({\n    url: projectPath,\n    type: 'GET',\n    headers: {\n      'Accept': 'application/json'\n    },\n    success: function (projectData) {\n      const projectSize = projectData.size === 0 ? UNDETERMINED : projectData.human_size;\n      $container.text(`(${projectSize})`);\n    },\n    error: function (request, status, error) {\n      console.log(\"An error occurred getting project size!\\n\" + error);\n      $container.text(`(${UNDETERMINED})`);\n    }\n  });\n}\n"],
  "mappings": "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",
  "names": ["CONFIG_ID", "configData", "rootPath", "configData", "setInnerHTML", "element", "html", "currentElement", "newElement", "attr", "scriptText", "replaceHTML", "id", "html", "ele", "tmp", "newHTML", "setInnerHTML", "_index", "ele", "pollForJobInfo", "updateProjectSize", "jobDetailsPath", "cluster", "jobId", "baseUrl", "rootPath", "projectId", "element", "url", "response", "r", "html", "currentData", "currentlyOpen", "responseElement", "stringToHtml", "jobStatus", "moveCompletedPanel", "replaceHTML", "status", "err", "template", "id", "newHTML", "oldElement", "div", "UNDETERMINED", "$container", "projectPath", "projectData", "projectSize", "request", "error"]
}
