{
  "version": 3,
  "sources": ["../../javascript/launcher_edit.js"],
  "sourcesContent": ["'use strict';\n\nlet newFieldTemplate = undefined;\n\nconst newFieldData = {\n  bc_num_hours: {\n    label: \"Hours\",\n    help: \"How long the job can run for.\",\n  },\n  auto_queues: {\n    label: \"Queues\",\n    help: \"Which queue the job will submit too.\",\n  }, \n  auto_accounts: {\n    label: \"Account\",\n    help: \"The account the job will be submitted with.\"\n  },\n  auto_job_name: {\n    label: \"Job Name\",\n    help: \"The name the job will have.\"\n  },\n  auto_log_location: {\n    label: \"Log Location\",\n    help: \"The destination of the job's log output.\"\n  },\n  bc_num_slots: {\n    label: \"Nodes\",\n    help: \"How many nodes the job will run on.\"\n  },\n  auto_environment_variable: {\n    label: 'Environment Variable',\n    help: 'Add an environment variable.'\n  },\n  auto_cores: {\n    label: 'Cores',\n    help: 'How many cores the job will run on.'\n  }\n}\n\nfunction addNewFieldButton() {\n  return $('#add_new_field_button');\n}\n\nfunction enableNewFieldButton() {\n  const newFieldButton = addNewFieldButton();\n  for(let newField in newFieldData) {\n    const field = document.getElementById(`launcher_${newField}`);\n    if(field === null) {\n      // There is at least one field to be added.\n      // Enabled add button.\n      newFieldButton.text('Add new option');\n      newFieldButton.attr('disabled', false);\n      return;\n    }\n  }\n\n  newFieldButton.text('No more options');\n}\n\nfunction addNewField(_event) {\n  const newFieldButton = addNewFieldButton();\n  newFieldButton.attr('disabled', true);\n  newFieldButton.before(newFieldTemplate.html());\n\n  const justAdded = newFieldButton.prev();\n  const deleteButton = justAdded.find('.btn-danger');\n  const addButton = justAdded.find('.btn-success');\n  const selectMenu = justAdded.find('select');\n\n  deleteButton.on('click', (event) => { removeInProgressField(event) });\n  addButton.on('click', (event) => { addInProgressField(event) });\n  selectMenu.on('change', (event) => { addHelpTextForOption(event) });\n\n  updateNewFieldOptions(selectMenu.get(0));\n  // initialize the help text\n  addHelpTextForOption({ target: selectMenu.get(0) });\n}\n\nfunction updateNewFieldOptions(selectMenu) {\n  for(let newField in newFieldData) {\n    const field = document.getElementById(`launcher_${newField}`);\n\n    // if the field doesn't already exist, it's an option for a new field.\n    if(field === null) {\n      const option = document.createElement(\"option\");\n      option.value = newField;\n      option.text = newFieldData[newField].label;\n\n      selectMenu.add(option);\n    }\n  }\n}\n\nfunction addHelpTextForOption(event) {\n  const helpText = newFieldData[event.target.value].help;\n  const topLevelDiv = event.target.parentElement.parentElement;\n\n  const helpTextDiv = topLevelDiv.firstElementChild;\n  helpTextDiv.innerText = helpText;\n}\n\nfunction removeInProgressField(event) {\n  const entireDiv = event.target.parentElement.parentElement.parentElement;\n  entireDiv.remove();\n  enableNewFieldButton()\n}\n\nfunction removeField(event) {\n  // TODO: shouldn't be able to remove cluster & script form fields.\n  const entireDiv = event.target.parentElement;\n  entireDiv.remove();\n  enableNewFieldButton();\n}\n\nfunction showEditField(event) {\n  const entireDiv = event.target.parentElement;\n  const editField = entireDiv.querySelector('.edit-group');\n  editField.classList.remove('d-none');\n\n  const saveButton = entireDiv.querySelector('.btn-success');\n  const editButton = entireDiv.querySelector('.btn-primary');\n\n  saveButton.classList.remove('d-none');\n  editButton.disabled = true;\n\n  saveButton.onclick = (event) => { saveEdit(event) };\n}\n\nfunction saveEdit(event) {\n  const entireDiv = event.target.parentElement;\n  const editField = entireDiv.querySelector('.edit-group');\n  editField.classList.add('d-none');\n\n  const saveButton = entireDiv.querySelector('.btn-success');\n  const editButton = entireDiv.querySelector('.btn-primary');\n\n  saveButton.classList.add('d-none');\n  editButton.disabled = false;\n}\n\nfunction addInProgressField(event) {  \n  const selectMenu = event.target.parentElement.parentElement.firstElementChild;\n  const choice = selectMenu.value;\n  const template = $(`#${choice}_template`);\n\n  const newFieldButton = addNewFieldButton();\n  newFieldButton.before(template.html());\n\n  const justAdded = newFieldButton.prev();\n  justAdded.find('.btn-danger')\n           .on('click', (event) => { removeField(event) });\n\n  justAdded.find('.btn-primary')\n           .on('click', (event) => { showEditField(event) });\n\n  justAdded.find('[data-select-toggler]')\n           .on('click', (event) => { enableOrDisableSelectOption(event) });\n\n  justAdded.find('[data-fixed-toggler]')\n           .on('click', (event) => { toggleFixedField(event) });\n\n  justAdded.find('[data-auto-environment-variable=\"name\"]')\n           .on('keyup', (event) => { updateAutoEnvironmentVariable(event) });\n\n  const entireDiv = event.target.parentElement.parentElement.parentElement;\n  entireDiv.remove();\n  enableNewFieldButton();\n}\n\nfunction updateAutoEnvironmentVariable(event) {\n  const aev_name = event.target.value;\n  const labelString = event.target.dataset.labelString;\n  const idString = `launcher_auto_environment_variable_${aev_name}`;\n  const nameString = `launcher[auto_environment_variable_${aev_name}]`;\n  var input_field = event.target.parentElement.children[2].children[1];\n\n  input_field.removeAttribute('readonly');\n  input_field.id = idString;\n  input_field.name = nameString;\n\n  if (labelString.match(/Environment(&#32;|\\s)Variable/)) {\n    const label_field = event.target.parentElement.children[2].children[0];\n    label_field.innerHTML = `Environment Variable: ${aev_name}`;\n  }\n\n  // Update the checkbox so that environment variables can be fixed when created\n  let fixedBoxGroup = event.target.parentElement.children[3].children[0].children[0];\n\n  let checkbox = fixedBoxGroup.children[0];\n  checkbox.id = `${idString}_fixed`;\n  checkbox.name = `launcher[auto_environment_variable_${aev_name}_fixed]`;\n  checkbox.setAttribute('data-fixed-toggler', idString);\n\n  // Update hidden field if attribute is already fixed, otherwise just update label\n  let labelIndex = 2;\n  if(fixedBoxGroup.children.length == 3) {\n    let hiddenField = fixedBoxGroup.children[1];\n    hiddenField.name = nameString;\n  } else {\n    labelIndex = 1;\n  }\n\n  let fixedLabel = fixedBoxGroup.children[labelIndex];\n  fixedLabel.setAttribute('for', `${idString}_fixed`);\n}\n\nfunction fixExcludeBasedOnSelect(selectElement) {\n  const excludeElementId = selectElement.dataset.excludeId;\n  const selectOptions = Array.from(selectElement.options);\n  const itemsToExclude = selectOptions.filter(opt => !opt.selected).map(opt => opt.text);\n  const excludeElement = document.getElementById(excludeElementId);\n  excludeElement.value = itemsToExclude.join(',');\n}\n\nfunction fixedFieldEnabled(checkbox, dataElement) {\n  // Disable the element to avoid updates from the user\n  dataElement.disabled = true;\n  // As it is disabled, need to add a hidden field with the same name to send the fixed field value to the backend.\n  const input = $('<input>').attr('type','hidden').attr('name', dataElement.name).attr('value', dataElement.value);\n  $(checkbox).after(input);\n\n  if (dataElement.nodeName == 'SELECT') {\n    const selectOptions = Array.from(dataElement.options);\n    const selectedOption = selectOptions.filter(opt => opt.selected)[0];\n    const selectOptionsConfig = $(dataElement).parents('.editable-form-field').find('li.list-group-item').get();\n\n    selectOptionsConfig.forEach(configItemLi => {\n      const textContent = $(configItemLi).find('[data-select-value]')[0].textContent;\n      if (selectedOption.text == textContent) {\n        enableRemoveOption(configItemLi, true);\n      } else {\n        enableAddOption(configItemLi, true);\n      }\n    });\n  }\n}\n\nfunction toggleFixedField(event) {\n  event.target.disabled = true;\n  const targetId = event.target.dataset.fixedToggler;\n  const dataElement = document.getElementById(targetId);\n  if (event.target.checked) {\n    fixedFieldEnabled(event.target, dataElement)\n  } else {\n    dataElement.disabled = false;\n    // Field enabled, remove the hidden field with the same name needed when disabled.\n    $(`input[type=hidden][name=\"${dataElement.name}\"]`).remove();\n\n    if (dataElement.nodeName == 'SELECT') {\n      fixExcludeBasedOnSelect(dataElement);\n      initSelect(dataElement);\n    }\n  }\n\n  event.target.disabled = false;\n}\n\nfunction enableAddOption(optionLi, addButtonDisabled = false) {\n  optionLi.classList.add('list-group-item-danger', 'text-strike');\n  const addButton = $(optionLi).find('[data-select-toggler=\"add\"]')[0];\n  addButton.disabled = addButtonDisabled;\n  const removeButton = $(optionLi).find('[data-select-toggler=\"remove\"]')[0];\n  removeButton.disabled = true;\n}\n\nfunction enableRemoveOption(optionLi, removeButtonDisabled = false) {\n  optionLi.classList.remove('list-group-item-secondary', 'list-group-item-danger', 'text-strike');\n  const addButton = $(optionLi).find('[data-select-toggler=\"add\"]')[0];\n  addButton.disabled = true;\n  const removeButton = $(optionLi).find('[data-select-toggler=\"remove\"]')[0];\n  removeButton.disabled = removeButtonDisabled;\n}\n\nfunction enableOrDisableSelectOption(event) {\n  const toggleAction = event.target.dataset.selectToggler;\n  const li = event.target.parentElement;\n  event.target.disabled = true;\n\n  const choice = $(li).find('[data-select-value]')[0].textContent;\n\n  const select = document.getElementById(event.target.dataset.selectId);\n  const excludeId = select.dataset.excludeId;\n  const selectOptions = Array.from(select.options);\n  const optionToToggle = selectOptions.filter(opt => opt.text == choice)[0];\n  const selectOptionsEnabled = selectOptions.filter(opt => !opt.disabled);\n\n  if(toggleAction == 'add') {\n    enableRemoveOption(li);\n    removeFromExcludeInput(excludeId, choice);\n    optionToToggle.disabled = false;\n  } else {\n    enableAddOption(li);\n    addToExcludeInput(excludeId, choice);\n    optionToToggle.disabled = true;\n    if (optionToToggle.selected) {\n      optionToToggle.selected = false;\n      // if we can remove, there is always another option\n      selectOptionsEnabled.filter(opt => opt.text !== choice)[0].selected = true;\n    }\n  }\n  enableOrDisableLastOption(li.parentElement);\n}\n\nfunction enableOrDisableLastOption(optionsOl) {\n  const optionLis = Array.from(optionsOl.children);\n\n  const optionsEnabled = Array.from(optionLis.filter((child) => {\n    return !child.classList.contains('text-strike');\n  }));\n\n  if(optionsEnabled.length > 1) {\n    // Make sure there are no options that have both the add and remove button disabled\n    const bothButtonsDisabled = optionsEnabled.filter((option) => {\n      return option.querySelectorAll('button:disabled').length == 2;\n    });\n    for(const option of bothButtonsDisabled) {\n      enableRemoveOption(option);\n    }\n  } else {\n    // Disable the remove button on the last option\n    enableRemoveOption(optionsEnabled[0], true);\n  }\n}\n\nfunction getExcludeList(excludeElementId) {\n  const excludeInput = document.getElementById(excludeElementId);\n  const excludeList = excludeInput.value.split(',').filter(word => word != \"\");\n  return { excludeInput, excludeList };\n}\n\nfunction addToExcludeInput(id, item) {\n  const { excludeInput, excludeList } = getExcludeList(id);\n  excludeList.push(item);\n\n  excludeInput.value = excludeList.join(',');\n}\n\nfunction removeFromExcludeInput(id, item) {\n  const { excludeInput, excludeList } = getExcludeList(id);\n  const newList = excludeList.filter(word => word != item);\n\n  excludeInput.value = newList.join(',');\n}\n\nfunction initSelectFields(){\n  const selectFields = Array.from($('select[data-exclude]'));\n\n  selectFields.forEach(select => {\n    initSelect(select);\n  });\n}\n\nfunction initSelect(selectElement) {\n  const excludeId = selectElement.dataset.excludeId;\n  const selectOptions = Array.from(selectElement.options);\n  const selectOptionsConfig = $(selectElement).parents('.editable-form-field').find('li.list-group-item').get();\n  const { excludeList } = getExcludeList(excludeId);\n\n  selectOptions.forEach(option => {\n    option.disabled = false;\n    if (excludeList.includes(option.text)) {\n      option.disabled = true;\n      option.selected = false;\n    }\n  });\n\n  selectOptionsConfig.forEach(configItem => {\n    enableRemoveOption(configItem);\n    const textContent = $(configItem).find('[data-select-value]')[0].textContent;\n    if (excludeList.includes(textContent)) {\n      enableAddOption(configItem);\n    }\n  });\n\n  enableOrDisableLastOption(selectOptionsConfig[0].parentElement);\n}\n\n\nfunction initFixedFields(){\n  const fixedCheckboxes = Array.from($('[data-fixed-toggler]'));\n\n  // find all the enabled 'fixed' checkboxes\n  fixedCheckboxes.filter((fixedFieldCheckbox) => {\n    return fixedFieldCheckbox.checked;\n    // now fix the value of the related field\n  }).map((fixedFieldCheckbox) => {\n    const dataElement = document.getElementById(fixedFieldCheckbox.dataset.fixedToggler);\n    fixedFieldEnabled(fixedFieldCheckbox, dataElement)\n  });\n}\n\njQuery(() => {\n  newFieldTemplate = $('#new_field_template');\n  $('#add_new_field_button').on('click', (event) => { addNewField(event) });\n  $('.new_launcher')\n    .find('.editable-form-field')\n    .find('.btn-danger')\n    .on('click', (event) => { removeField(event) });\n\n  $('.new_launcher')\n    .find('.editable-form-field')\n    .find('.btn-primary')\n    .on('click', (event) => { showEditField(event) });\n\n  $('[data-select-toggler]')\n    .on('click', (event) => { enableOrDisableSelectOption(event) });\n\n  $('[data-fixed-toggler]')\n      .on('click', (event) => { toggleFixedField(event) });\n\n  $('[data-auto-environment-variable=\"name\"]')\n      .on('keyup', (event) => { updateAutoEnvironmentVariable(event) });\n\n  initSelectFields();\n  initFixedFields();\n});\n"],
  "mappings": "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",
  "names": ["newFieldTemplate", "newFieldData", "addNewFieldButton", "enableNewFieldButton", "newFieldButton", "newField", "addNewField", "_event", "justAdded", "deleteButton", "addButton", "selectMenu", "event", "removeInProgressField", "addInProgressField", "addHelpTextForOption", "updateNewFieldOptions", "option", "helpText", "helpTextDiv", "removeField", "showEditField", "entireDiv", "saveButton", "editButton", "saveEdit", "choice", "template", "enableOrDisableSelectOption", "toggleFixedField", "updateAutoEnvironmentVariable", "aev_name", "labelString", "idString", "nameString", "input_field", "label_field", "fixedBoxGroup", "checkbox", "labelIndex", "hiddenField", "fixExcludeBasedOnSelect", "selectElement", "excludeElementId", "itemsToExclude", "opt", "excludeElement", "fixedFieldEnabled", "dataElement", "input", "selectedOption", "configItemLi", "textContent", "enableRemoveOption", "enableAddOption", "targetId", "initSelect", "optionLi", "addButtonDisabled", "removeButton", "removeButtonDisabled", "toggleAction", "li", "select", "excludeId", "selectOptions", "optionToToggle", "selectOptionsEnabled", "removeFromExcludeInput", "addToExcludeInput", "enableOrDisableLastOption", "optionsOl", "optionLis", "optionsEnabled", "child", "bothButtonsDisabled", "getExcludeList", "excludeInput", "excludeList", "word", "id", "item", "newList", "initSelectFields", "selectOptionsConfig", "configItem", "initFixedFields", "fixedFieldCheckbox"]
}
