{
  "version": 3,
  "sources": ["../../javascript/alert.js", "../../javascript/utils.js", "../../javascript/path_selector/path_selector_data_table.js", "../../javascript/path_selector/path_selector.js", "../../javascript/projects_new.js"],
  "sourcesContent": ["\nexport function alert(message) {\n  const div = alertDiv(message);\n  const main = document.getElementById('main_container');\n  main.prepend(div);\n  div.scrollIntoView({ behavior: 'smooth' });\n}\n\nfunction alertDiv(message) {\n  const span = document.createElement('span');\n  span.innerText = message;\n\n  const div = document.createElement('div');\n  div.classList.add('alert', 'alert-danger', 'alert-dismissible');\n  div.setAttribute('role', 'alert');\n  div.appendChild(span);\n  div.appendChild(closeButton());\n\n  return div;\n}\n\nfunction closeButton() {\n  const button = document.createElement('button');\n  button.classList.add('btn-close');\n  button.dataset.bsDismiss = 'alert';\n\n  const span = document.createElement('span');\n  span.classList.add('sr-only');\n  span.innerText = 'Close';\n\n  button.appendChild(span);\n\n  return button;\n}", "import {analyticsPath} from \"./config\";\n\nexport function cssBadgeForState(state){\n  switch (state) {\n    case 'completed':\n      return 'bg-success';\n    case 'running':\n      return 'bg-primary'\n    case 'queued':\n      return 'bg-info';\n    case 'queued_held':\n      return 'bg-warning';\n    case 'suspended':\n      return 'bg-warning';\n    default:\n      return 'bg-warning';\n  }\n}\n\nexport function capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nexport function startOfYear() {\n  const now = new Date();\n  const past = new Date();\n  past.setDate(1);\n  past.setMonth(0);\n  past.setFullYear(now.getFullYear());\n  return `${past.getFullYear()}-${past.getMonth()+1}-${past.getDate()}`;\n}\n\nexport function thirtyDaysAgo() {\n  const now = new Date();\n  const past = new Date();\n  past.setDate(now.getDate() - 30);\n  return `${past.getFullYear()}-${past.getMonth()+1}-${past.getDate()}`;\n}\n\nexport function today() {\n  const now = new Date();\n  return `${now.getFullYear()}-${now.getMonth()+1}-${now.getDate()}`;\n}\n\nfunction showSpinner() {\n  $('body').addClass('modal-open');\n  $('#full-page-spinner').removeClass('d-none');\n}\n\nexport function bindFullPageSpinnerEvent() {\n  $('.full-page-spinner').each((index, element) => {\n    const $element = $(element);\n    if($element.is('a')) {\n      $element.on('click', showSpinner);\n    } else {\n      $element.closest('form').on('submit', showSpinner);\n    }\n  });\n}\n\n// open links in javascript and display an alert\nexport function openLinkInJs(event) {\n  event.preventDefault();\n  let href = event.target.href;\n\n  // event.target could be a child of the anchor, so try that.\n  if(href == null) {\n    const closestAnchor = event.target.closest('a');\n    if(closestAnchor.hasChildNodes(event.target)) {\n      href = closestAnchor.href;\n    } else {\n      // event.target is not a child of an anhcor, so there's nothing to do.\n      return;\n    }\n  }\n\n  if(window.open(href) == null) {\n    // link was not opened in new window, so display error msg to user\n    const html = document.getElementById('js-alert-danger-template').innerHTML;\n    const msg = \"This link is configured to open in a new window, but it doesn't seem to have opened. \" +\n          \"Please disable your popup blocker for this page and try again.\";\n\n    // replace message in alert and add to main div of layout\n    const mainDiv = document.querySelectorAll('div[role=\"main\"]')[0];\n    const alertDiv = document.createElement('div');\n    alertDiv.innerHTML = html.split(\"ALERT_MSG\").join(msg);\n    mainDiv.prepend(alertDiv);\n  }\n}\n\n// Helper method to set an element's innerHTML property\n// and evaluate any <script> tags that may exist within it.\n// Just setting innerHTML of an html element does not re-evaluate\n// the <script> tags that it may hold.\nexport function setInnerHTML(element, html) {\n  element.innerHTML = html;\n  const scripts = Array.from(element.querySelectorAll(\"script\"));\n\n  scripts.forEach(currentElement => {\n    const newElement = document.createElement(\"script\");\n\n    Array.from(currentElement.attributes).forEach( attr => {\n      newElement.setAttribute(attr.name, attr.value);\n    });\n\n    const scriptText = document.createTextNode(currentElement.innerHTML);\n    newElement.appendChild(scriptText);\n\n    currentElement.parentNode.replaceChild(newElement, currentElement);\n  });\n}\n\n// Helper method to report errors from the front end via AJAX\nexport function reportErrorForAnalytics(path, error) {\n  // error - report back for analytics purposes\n  const analyticsUrl = new URL(analyticsPath(path), document.location);\n  analyticsUrl.searchParams.append('error', error);\n  // Fire and Forget\n  fetch(analyticsUrl);\n}\n\n// helper method to hide an element. Note that jQuery's hide()\n// changes the inline style which may not do anything if the element\n// already has a bootstrap display class like d-flex.\nexport function hide(id) {\n  const ele = document.getElementById(id);\n  if(ele !== null) {\n    ele.classList.add('d-none');\n  }\n}\n\n// helper method to show an element. Note that jQuery's show()\n// changes the inline style which may not do anything if the element\n// already has a bootstrap display class like d-flex.\nexport function show(id) {\n  const ele = document.getElementById(id);\n  if(ele !== null) {\n    ele.classList.remove('d-none');\n  }\n}\n", "import { alert } from '../alert';\nimport { hide, show } from \"../utils\";\n\nexport class PathSelectorTable {\n  _table = null;\n\n  // input data that should be passed into the constructor\n  tableId             = undefined;\n  filesPath           = undefined;\n  breadcrumbId        = undefined;\n  initialDirectory    = undefined;\n  selectButtonId      = undefined;\n  inputFieldId        = undefined;\n  modalId             = undefined;\n  showHidden          = undefined;\n  showFiles           = undefined;\n  filePattern         = undefined;\n\n  constructor(options) {\n      this.tableId             = options.tableId;\n      this.filesPath           = options.filesPath;\n      this.breadcrumbId        = options.breadcrumbId;\n      this.initialDirectory    = options.initialDirectory;\n      this.selectButtonId      = options.selectButtonId;\n      this.inputFieldId        = options.inputFieldId;\n      this.modalId             = options.modalId;\n      this.showHidden          = options.showHidden === 'true';\n      this.showFiles           = options.showFiles === 'true';\n      this.filePattern         = options.filePattern;\n\n      this.initDataTable();\n      this.reloadTable(this.initialUrl());\n\n      $(`#${this.tableId} tbody`).on('click', 'tr', (event) => { this.clickRow(event) });\n      $('#favorites').on('click', 'li', (event) => { this.clickRow(event) });\n      $(`#${this.breadcrumbId}`).on('click', 'li', (event) => { this.clickBreadcrumb(event) });\n      $(`#${this.selectButtonId}`).on('click', (event) => { this.selectPath(event) });\n  }\n\n  initDataTable() {\n    this._table = $(`#${this.tableId}`).DataTable({\n      autoWidth: false,\n      language: {\n        search: 'Filter:',\n      },\n      order: [[0, \"asc\"], [1, \"asc\"]],\n      rowId: 'id',\n      paging: false,\n      scrollCollapse: true,\n      select: {\n          style: 'os',\n          className: 'selected',\n          toggleable: true,\n          // don't trigger select checkbox column as select\n          // if you need to omit more columns, use a \"selectable\" class on the columns you want to support selection\n          selector: 'td:not(:first-child)'\n      },\n      // https://datatables.net/reference/option/dom\n      // dom: '', dataTables_info nowrap\n      //\n      // put breadcrumbs below filter!!!\n      dom: \"<'row'<'col-sm-12'f>>\" + // normally <'row'<'col-sm-6'l><'col-sm-6'f>> but we disabled pagination so l is not needed (dropdown for selecting # rows)\n          \"<'row'<'col-sm-12'<'dt-status-bar'<'datatables-status float-end'><'transfers-status'>>>>\" +\n          \"<'row'<'col-sm-12'tr>>\", // normally this is <'row'<'col-sm-5'i><'col-sm-7'p>> but we disabled pagination so have info take whole row\n      columns: [\n        {\n          data: 'type',\n          render: (data, _type, _row, _meta) => data == 'd' ? '<span title=\"directory\" class=\"fa fa-folder gold\"><span class=\"sr-only\">directory</span></span>' : '<span title=\"file\" class=\"fa fa-file black\"><span class=\"sr-only\">file</span></span>'\n        },\n        {\n            name: 'name',\n            data: 'name',\n            className: 'text-break',\n            render: (data, _type, _row, _meta) => {\n                const ele = document.createElement('span');\n                ele.textContent = data;\n                return ele.outerHTML;\n            }\n\n        }\n      ],\n      createdRow: function (row, data, _dataIndex) {\n        row.classList.add('clickable');\n        row.dataset['apiUrl'] = data.url;\n        row.dataset['pathType'] = data.type;\n      },\n    });\n  }\n\n  async reloadTable(url) {\n    try {\n      $(this.tableWrapper()).hide();\n      show(`${this.tableId}_spinner`);\n      const response = await fetch(url, { headers: { 'Accept': 'application/json' }, cache: 'no-store' });\n      const data = await this.dataFromJsonResponse(response);\n      $(`#${this.breadcrumbId}`).html(data.path_selector_breadcrumbs_html);\n      this._table.clear();\n      this._table.rows.add(data.files);\n      this.setLastVisited(data.path);\n      this._table.draw();\n      this.resetTable();\n    } catch (err) {\n      this.resetTable();\n      if (err.message.match(\"Permission denied\")) {\n        $('#forbidden-warning').removeClass('d-none')\n        $('#forbidden-warning').trigger('focus');\n      }\n      console.log(err);\n    }\n  }\n\n  resetTable() {\n    hide(`${this.tableId}_spinner`);\n    $(this.tableWrapper()).show();\n    $('#forbidden-warning').addClass('d-none');\n  }\n\n  dataFromJsonResponse(response) {\n    return new Promise((resolve, reject) => {\n      Promise.resolve(response)\n        .then(response => response.ok ? Promise.resolve(response) : Promise.reject(new Error(response.statusText)))\n        .then(response => response.json())\n        .then(data => this.filterFileResponse(data))\n        .then(data => data.error_message ? Promise.reject(new Error(data.error_message)) : resolve(data))\n        .catch((e) => reject(e))\n    });\n  }\n\n  clickRow(event) {\n    const row = $(event.target).closest('tr').get(0) || event.target;\n    const url = row.dataset['apiUrl'];\n    const pathType = row.dataset['pathType'];\n    this.activateFavorite(row);\n\n    // only reload table for directories. and correct last visited\n    // if it's a file.\n    if(pathType == 'f') {\n      const path = url.replace(this.filesPath, '').replaceAll('//','/');\n      this.setLastVisited(path, pathType);\n    } else {\n      this.reloadTable(url);\n    }\n  }\n\n  activateFavorite(currentlyClicked) {\n    $('li.active').each((_idx, ele) => {\n      ele.classList.remove('active');\n    });\n\n    if(currentlyClicked.tagName == \"LI\") {\n      currentlyClicked.classList.add('active');\n    }\n  }\n\n  clickBreadcrumb(event) {\n    const path = event.target.id;\n    this.activateFavorite(event.target);\n    this.reloadTable(path);\n  }\n\n  selectPath(_event) {\n    const last = this.getLastVisited();\n    const inputField = document.getElementById(this.inputFieldId);\n    inputField.value = last.path;\n    $(`#${this.modalId}`).modal('hide');\n  }\n\n  storageKey() {\n    const underscore_path = window.location.pathname.replaceAll('/', '_');\n    return `${this.tableId}${underscore_path}_last_visited`;\n  }\n\n  tableWrapper() {\n    return `#${this.tableId}_wrapper`;\n  }\n\n  // note that this is storing the file system path, not the path of the URL \n  // i.e., '/home/annie' not '/pun/sys/dashboard/files/fs/home/annie'\n  getLastVisited() {\n    const lastVisited = localStorage.getItem(this.storageKey());\n    if(lastVisited === null) {\n      return { path: this.initialDirectory, type: 'd' };\n    } else {\n      return JSON.parse(lastVisited);\n    }\n  }\n\n  setLastVisited(path, pathType = 'd') {\n    const item = { path: decodeURI(path), type: pathType };\n    if(path) {\n      localStorage.setItem(this.storageKey(), JSON.stringify(item));\n    }\n  }\n\n  initialUrl() {\n    const last = this.getLastVisited();\n    let path = undefined;\n\n    // if the last visisted was a file, then set the initial\n    // url to the file's directory.\n    if(last.type == 'f') {\n      path = last.path.split('/').slice(0, -1).join('/');\n    } else {\n      path = last.path;\n    }\n\n    if(path.startsWith('/')) {\n      return `${this.filesPath}${path}`;\n    } else {\n      return `${this.filesPath}/${path}`;\n    }\n  }\n\n  // filter the response from the files API to remove things like hidden files/directories\n  filterFileResponse(data) {\n    let regex = undefined\n\n    try {\n      if (this.filePattern !== undefined) {\n        regex = RegExp(this.filePattern);\n      }\n    } catch {\n      alert(\"The regular expression provided for this path selector did not compile\");\n    }\n\n    const filteredFiles = data.files.filter((file) => {\n      const isHidden = file.name.startsWith('.');\n      const isFile = file.type == \"f\";\n\n      if(isHidden && isFile) {\n        return this.showHidden && this.showFiles;\n      } else if(isHidden) {\n        return this.showHidden;\n      } else if(isFile) {\n        return this.filteredByFilename(file, regex);\n      } else {\n        return true;\n      }\n    });\n\n    data.files = filteredFiles;\n    return data;\n  }\n\n  filteredByFilename(file, regex) {\n    if (regex !== undefined) {\n      if (file.name.match(regex)) {\n        return this.showFiles;\n      } else {\n        return false;\n      }\n    }\n    else {\n      return this.showFiles;\n    }\n  }\n}", "'use strict';\n\nimport { PathSelectorTable } from \"./path_selector_data_table\";\n\nexport function attachPathSelectors() {\n  $(\"[data-path-selector='true']\").each((_idx, element) => {\n    const query = `#${pathSelectorId(element.id)}`;\n    const modal = $(query).get(0);\n\n    makeTable(modal);\n  });  \n}\n\nfunction pathSelectorId(id) {\n  return `${id}_path_selector`;\n}\n\nfunction makeTable(element) {\n  const options = getPathSelectorOptions(element);\n  new PathSelectorTable(options);\n}\n\nfunction getPathSelectorOptions(element) {\n  const options = {};\n\n  options.filesPath           = element.dataset['filesPath'];\n  options.initialDirectory    = element.dataset['initialDirectory'];\n  options.tableId             = element.dataset['tableId'];\n  options.breadcrumbId        = element.dataset['breadcrumbId'];\n  options.selectButtonId      = element.dataset['selectButtonId'];\n  options.inputFieldId        = element.dataset['inputFieldId'];\n  options.showFiles           = element.dataset['showFiles'];\n  options.showHidden          = element.dataset['showHidden'];\n  options.filePattern         = element.dataset['filePattern']\n  options.modalId             = element.id;\n\n  return options;\n}\n", "'use strict';\n\nimport { attachPathSelectors }  from './path_selector/path_selector';\n\njQuery(function() {\n  $(\"#project_template\").on('change', (event) => templateChange(event));\n  attachPathSelectors();\n});\n\nfunction templateChange(event) {\n  const choice = $(`#project_template option[value=\"${event.target.value}\"]`)[0];\n  if(choice === undefined) {\n    return;\n  }\n\n  const name = choice.label;\n  const description = choice.dataset.description;\n  const icon = choice.dataset.icon;\n\n  $(\"#project_name\").val(name);\n  $(\"#project_description\").val(description);\n  $(\"#product_icon_select\").val(icon);\n  $(\"#product_icon_select\").trigger('change');\n}\n"],
  "mappings": "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",
  "names": ["alert", "message", "div", "alertDiv", "span", "closeButton", "button", "hide", "id", "ele", "show", "PathSelectorTable", "options", "event", "data", "_type", "_row", "_meta", "ele", "row", "_dataIndex", "url", "show", "response", "err", "hide", "resolve", "reject", "e", "pathType", "path", "currentlyClicked", "_idx", "_event", "last", "inputField", "underscore_path", "lastVisited", "item", "regex", "alert", "filteredFiles", "file", "isHidden", "isFile", "attachPathSelectors", "_idx", "element", "query", "pathSelectorId", "modal", "makeTable", "id", "options", "getPathSelectorOptions", "PathSelectorTable", "event", "templateChange", "attachPathSelectors", "choice", "name", "description", "icon"]
}
